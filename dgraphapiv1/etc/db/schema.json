{
    "data": {
        "getGQLSchema": {
            "generatedSchema": "#######################\n# Input Schema\n#######################\n\n\"\"\"Org is the owner organization of specified Folivora assets.\n\nAll other types defined in the schema include an `org` field, with/out\na `@hasInverse` directive, to enforce multitenancy `@auth` rules.\"\"\"\ntype Org @auth(add: {rule:\"{ $isApp: { eq: \\\"true\\\" } }\"}, get: {or:[{rule:\"{ $isApp: { eq: \\\"true\\\" } }\"},{and:[{rule:\"{ $isAuthenticated: { eq: \\\"true\\\" } }\"},{rule:\"query( $orgID: ID! ) {\\n\\t\\t\\t\\tqueryOrg( filter: { id: [$orgID] } ) {\\n\\t\\t\\t\\t\\tid\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\"}]}]}, query: {or:[{rule:\"{ $isApp: { eq: \\\"true\\\" } }\"},{and:[{rule:\"{ $isAuthenticated: { eq: \\\"true\\\" } }\"},{rule:\"query( $orgID: ID! ) {\\n\\t\\t\\t\\tqueryOrg( filter: { id: [$orgID] } ) {\\n\\t\\t\\t\\t\\tid\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\"}]}]}, update: {or:[{rule:\"{ $isApp: { eq: \\\"true\\\" } }\"},{and:[{rule:\"{ $isAuthenticated: { eq: \\\"true\\\" } }\"},{rule:\"query( $orgID: ID! ) {\\n\\t\\t\\t\\tqueryOrg( filter: { id: [$orgID] } ) {\\n\\t\\t\\t\\t\\tid\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\"}]}]}, delete: {rule:\"{ $isApp: { eq: \\\"true\\\" } }\"}) {\n\tid: ID!\n\tname: String!\n\tusers(filter: UserFilter, order: UserOrder, first: Int, offset: Int): [User] @hasInverse(field: org)\n}\n\n\"\"\"User is an individual member of the owner `org`.\n\nThe `auth0ID` field is populated by the `@custom` \"create\" directive.\"\"\"\ntype User @auth(add: {rule:\"{ $isApp: { eq: \\\"true\\\" } }\"}, get: {or:[{rule:\"{ $isApp: { eq: \\\"true\\\" } }\"},{and:[{rule:\"{ $isAuthenticated: { eq: \\\"true\\\" } }\"},{rule:\"query( $orgID: ID! ) {\\n\\t\\t\\t\\tqueryUser {\\n\\t\\t\\t\\t\\torg ( filter: { id: [$orgID] } ) {\\n\\t\\t\\t\\t\\t\\tid\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\"}]}]}, query: {or:[{rule:\"{ $isApp: { eq: \\\"true\\\" } }\"},{and:[{rule:\"{ $isAuthenticated: { eq: \\\"true\\\" } }\"},{rule:\"query( $orgID: ID! ) {\\n\\t\\t\\t\\tqueryUser {\\n\\t\\t\\t\\t\\torg ( filter: { id: [$orgID] } ) {\\n\\t\\t\\t\\t\\t\\tid\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\"}]}]}, update: {or:[{rule:\"{ $isApp: { eq: \\\"true\\\" } }\"},{and:[{rule:\"{ $isAuthenticated: { eq: \\\"true\\\" } }\"},{rule:\"query( $orgID: ID! ) {\\n\\t\\t\\t\\tqueryUser {\\n\\t\\t\\t\\t\\torg ( filter: { id: [$orgID] } ) {\\n\\t\\t\\t\\t\\t\\tid\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\"}]}]}, delete: {rule:\"{ $isApp: { eq: \\\"true\\\" } }\"}) {\n\tid: ID!\n\temail: String!\n\torg(filter: OrgFilter): Org! @hasInverse(field: users)\n\tfirstName: String! @search(by: [exact])\n\tlastName: String! @search(by: [exact])\n\tauth0ID: String! @search(by: [exact])\n}\n\n\"\"\"Donor is an individual contributing physical specimens.\n\nThe `consents` field is updated as the Donor agrees to donations.\"\"\"\ntype Donor @auth(add: {or:[{rule:\"{ $isApp: { eq: \\\"true\\\" } }\"},{and:[{rule:\"{ $isAuthenticated: { eq: \\\"true\\\" } }\"},{rule:\"query( $orgID: ID! ) {\\n\\t\\t\\t\\tqueryDonor {\\n\\t\\t\\t\\t\\torg ( filter: { id: [$orgID] } ) {\\n\\t\\t\\t\\t\\t\\tid\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\"}]}]}, get: {or:[{rule:\"{ $isApp: { eq: \\\"true\\\" } }\"},{and:[{rule:\"{ $isAuthenticated: { eq: \\\"true\\\" } }\"},{rule:\"query( $orgID: ID! ) {\\n\\t\\t\\t\\tqueryDonor {\\n\\t\\t\\t\\t\\torg ( filter: { id: [$orgID] } ) {\\n\\t\\t\\t\\t\\t\\tid\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\"}]}]}, query: {or:[{rule:\"{ $isApp: { eq: \\\"true\\\" } }\"},{and:[{rule:\"{ $isAuthenticated: { eq: \\\"true\\\" } }\"},{rule:\"query( $orgID: ID! ) {\\n\\t\\t\\t\\tqueryDonor {\\n\\t\\t\\t\\t\\torg ( filter: { id: [$orgID] } ) {\\n\\t\\t\\t\\t\\t\\tid\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\"}]}]}, update: {or:[{rule:\"{ $isApp: { eq: \\\"true\\\" } }\"},{and:[{rule:\"{ $isAuthenticated: { eq: \\\"true\\\" } }\"},{rule:\"query( $orgID: ID! ) {\\n\\t\\t\\t\\tqueryDonor {\\n\\t\\t\\t\\t\\torg ( filter: { id: [$orgID] } ) {\\n\\t\\t\\t\\t\\t\\tid\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\"}]}]}, delete: {or:[{rule:\"{ $isApp: { eq: \\\"true\\\" } }\"},{and:[{rule:\"{ $isAuthenticated: { eq: \\\"true\\\" } }\"},{rule:\"query( $orgID: ID! ) {\\n\\t\\t\\t\\tqueryDonor {\\n\\t\\t\\t\\t\\torg ( filter: { id: [$orgID] } ) {\\n\\t\\t\\t\\t\\t\\tid\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\"}]}]}) {\n\tid: ID!\n\torg(filter: OrgFilter): Org!\n\tdob: DateTime! @search\n\tsex: Sex @search(by: [exact,regexp])\n\trace: Race @search(by: [exact,regexp])\n\tdonorConsent(filter: DonorConsentActionFilter, order: DonorConsentActionOrder, first: Int, offset: Int): [DonorConsentAction] @hasInverse(field: donor)\n\tspecimens(filter: SpecimenFilter, order: SpecimenOrder, first: Int, offset: Int): [Specimen] @hasInverse(field: donor)\n}\n\n\"\"\"Consent are the specific agreement for specimen collection.\"\"\"\ntype Consent @auth(add: {or:[{rule:\"{ $isApp: { eq: \\\"true\\\" } }\"},{and:[{rule:\"{ $isAuthenticated: { eq: \\\"true\\\" } }\"},{rule:\"query( $orgID: ID! ) {\\n\\t\\t\\t\\tqueryConsent {\\n\\t\\t\\t\\t\\torg ( filter: { id: [$orgID] } ) {\\n\\t\\t\\t\\t\\t\\tid\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\"}]}]}, get: {or:[{rule:\"{ $isApp: { eq: \\\"true\\\" } }\"},{and:[{rule:\"{ $isAuthenticated: { eq: \\\"true\\\" } }\"},{rule:\"query( $orgID: ID! ) {\\n\\t\\t\\t\\tqueryConsent {\\n\\t\\t\\t\\t\\torg ( filter: { id: [$orgID] } ) {\\n\\t\\t\\t\\t\\t\\tid\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\"}]}]}, query: {or:[{rule:\"{ $isApp: { eq: \\\"true\\\" } }\"},{and:[{rule:\"{ $isAuthenticated: { eq: \\\"true\\\" } }\"},{rule:\"query( $orgID: ID! ) {\\n\\t\\t\\t\\tqueryConsent {\\n\\t\\t\\t\\t\\torg ( filter: { id: [$orgID] } ) {\\n\\t\\t\\t\\t\\t\\tid\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\"}]}]}, update: {or:[{rule:\"{ $isApp: { eq: \\\"true\\\" } }\"},{and:[{rule:\"{ $isAuthenticated: { eq: \\\"true\\\" } }\"},{rule:\"query( $orgID: ID! ) {\\n\\t\\t\\t\\tqueryConsent {\\n\\t\\t\\t\\t\\torg ( filter: { id: [$orgID] } ) {\\n\\t\\t\\t\\t\\t\\tid\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\"}]}]}, delete: {or:[{rule:\"{ $isApp: { eq: \\\"true\\\" } }\"},{and:[{rule:\"{ $isAuthenticated: { eq: \\\"true\\\" } }\"},{rule:\"query( $orgID: ID! ) {\\n\\t\\t\\t\\tqueryConsent {\\n\\t\\t\\t\\t\\torg ( filter: { id: [$orgID] } ) {\\n\\t\\t\\t\\t\\t\\tid\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\"}]}]}) {\n\tid: ID!\n\torg(filter: OrgFilter): Org!\n\tdonorConsent(filter: DonorConsentActionFilter, order: DonorConsentActionOrder, first: Int, offset: Int): [DonorConsentAction] @hasInverse(field: consent)\n\ttextBody: String! @search(by: [fulltext])\n\tspecimens(filter: SpecimenFilter, order: SpecimenOrder, first: Int, offset: Int): [Specimen] @hasInverse(field: consent)\n\tdestructionDate: DateTime! @search\n}\n\n\"\"\"DonorConsentAction is the Donor action to accept a Consent.\n\nThe `donor` and `consent` fields are required to sync a Donor with\na specific Consent.\"\"\"\ntype DonorConsentAction @auth(add: {or:[{rule:\"{ $isApp: { eq: \\\"true\\\" } }\"},{and:[{rule:\"{ $isAuthenticated: { eq: \\\"true\\\" } }\"},{rule:\"query( $orgID: ID! ) {\\n\\t\\t\\t\\tqueryDonorConsentAction {\\n\\t\\t\\t\\t\\torg ( filter: { id: [$orgID] } ) {\\n\\t\\t\\t\\t\\t\\tid\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\"}]}]}, get: {or:[{rule:\"{ $isApp: { eq: \\\"true\\\" } }\"},{and:[{rule:\"{ $isAuthenticated: { eq: \\\"true\\\" } }\"},{rule:\"query( $orgID: ID! ) {\\n\\t\\t\\t\\tqueryDonorConsentAction {\\n\\t\\t\\t\\t\\torg ( filter: { id: [$orgID] } ) {\\n\\t\\t\\t\\t\\t\\tid\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\"}]}]}, query: {or:[{rule:\"{ $isApp: { eq: \\\"true\\\" } }\"},{and:[{rule:\"{ $isAuthenticated: { eq: \\\"true\\\" } }\"},{rule:\"query( $orgID: ID! ) {\\n\\t\\t\\t\\tqueryDonorConsentAction {\\n\\t\\t\\t\\t\\torg ( filter: { id: [$orgID] } ) {\\n\\t\\t\\t\\t\\t\\tid\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\"}]}]}, update: {or:[{rule:\"{ $isApp: { eq: \\\"true\\\" } }\"},{and:[{rule:\"{ $isAuthenticated: { eq: \\\"true\\\" } }\"},{rule:\"query( $orgID: ID! ) {\\n\\t\\t\\t\\tqueryDonorConsentAction {\\n\\t\\t\\t\\t\\torg ( filter: { id: [$orgID] } ) {\\n\\t\\t\\t\\t\\t\\tid\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\"}]}]}, delete: {or:[{rule:\"{ $isApp: { eq: \\\"true\\\" } }\"},{and:[{rule:\"{ $isAuthenticated: { eq: \\\"true\\\" } }\"},{rule:\"query( $orgID: ID! ) {\\n\\t\\t\\t\\tqueryDonorConsentAction {\\n\\t\\t\\t\\t\\torg ( filter: { id: [$orgID] } ) {\\n\\t\\t\\t\\t\\t\\tid\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\"}]}]}) {\n\tid: ID!\n\torg(filter: OrgFilter): Org!\n\tdonor(filter: DonorFilter): Donor! @hasInverse(field: donorConsent)\n\tconsent(filter: ConsentFilter): Consent! @hasInverse(field: donorConsent)\n\ttimestamp: DateTime! @search\n}\n\n\"\"\"Sex is the option for populating the Donor `sex` field.\"\"\"\nenum Sex {\n\tMALE\n\tFEMALE\n}\n\n\"\"\"Race is the option for populating the Donor `race` field.\"\"\"\nenum Race {\n\tAMERICAN_INDIAN_OR_ALASKA_NATIVE\n\tASIAN\n\tBLACK_OR_AFRICAN_AMERICAN\n\tHISPANIC_OR_LATINO\n\tWHITE\n}\n\n\"\"\"Specimen are the common fields for all specimen-type objects.\"\"\"\ninterface Specimen {\n\tid: ID!\n\torg(filter: OrgFilter): Org!\n\texternalID: String! @search(by: [hash])\n\ttype: SpecimenType @search(by: [exact,regexp])\n\tstatus: SpecimenStatus @search(by: [exact,regexp])\n\tdonor(filter: DonorFilter): Donor! @hasInverse(field: specimens)\n\tconsent(filter: ConsentFilter): Consent! @hasInverse(field: specimens)\n\ttimestamp: DateTime! @search\n}\n\n\"\"\"BloodSpecimen is blood type implementation of Specimen.\n\nThe `bloodType` and `volume` fields are added to all Specimen fields.\"\"\"\ntype BloodSpecimen implements Specimen @auth(add: {or:[{rule:\"{ $isApp: { eq: \\\"true\\\" } }\"},{and:[{rule:\"{ $isAuthenticated: { eq: \\\"true\\\" } }\"},{rule:\"query( $orgID: ID! ) {\\n\\t\\t\\t\\tqueryBloodSpecimen {\\n\\t\\t\\t\\t\\torg ( filter: { id: [$orgID] } ) {\\n\\t\\t\\t\\t\\t\\tid\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\"}]}]}, get: {or:[{rule:\"{ $isApp: { eq: \\\"true\\\" } }\"},{and:[{rule:\"{ $isAuthenticated: { eq: \\\"true\\\" } }\"},{rule:\"query( $orgID: ID! ) {\\n\\t\\t\\t\\tqueryBloodSpecimen {\\n\\t\\t\\t\\t\\torg ( filter: { id: [$orgID] } ) {\\n\\t\\t\\t\\t\\t\\tid\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\"}]}]}, query: {or:[{rule:\"{ $isApp: { eq: \\\"true\\\" } }\"},{and:[{rule:\"{ $isAuthenticated: { eq: \\\"true\\\" } }\"},{rule:\"query( $orgID: ID! ) {\\n\\t\\t\\t\\tqueryBloodSpecimen {\\n\\t\\t\\t\\t\\torg ( filter: { id: [$orgID] } ) {\\n\\t\\t\\t\\t\\t\\tid\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\"}]}]}, update: {rule:\"{ $isApp: { eq: \\\"true\\\" } }\"}, delete: {or:[{rule:\"{ $isApp: { eq: \\\"true\\\" } }\"},{and:[{rule:\"{ $isAuthenticated: { eq: \\\"true\\\" } }\"},{rule:\"query( $orgID: ID! ) {\\n\\t\\t\\t\\tqueryBloodSpecimen {\\n\\t\\t\\t\\t\\torg ( filter: { id: [$orgID] } ) {\\n\\t\\t\\t\\t\\t\\tid\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\"}]}]}) {\n\tid: ID!\n\torg(filter: OrgFilter): Org!\n\texternalID: String! @search(by: [hash])\n\ttype: SpecimenType @search(by: [exact,regexp])\n\tstatus: SpecimenStatus @search(by: [exact,regexp])\n\tdonor(filter: DonorFilter): Donor! @hasInverse(field: specimens)\n\tconsent(filter: ConsentFilter): Consent! @hasInverse(field: specimens)\n\ttimestamp: DateTime! @search\n\tbloodType: BloodType! @search(by: [exact,regexp])\n\tcontainer: ContainerType! @search(by: [exact,regexp])\n\tvolume: Float! @search\n\tdescription: String! @search(by: [fulltext])\n\tupdates(filter: BloodSpecimenUpdateFilter, order: BloodSpecimenUpdateOrder, first: Int, offset: Int): [BloodSpecimenUpdate] @hasInverse(field: bloodSpecimen)\n}\n\n\"\"\"BloodSpecimenUpdate is a helper type to provide a historical trail of\nupdate mutations executed on a BloodSpecimen type.\n\nThis type is added programmatically via a @custom mutation; although\nall of the fields are technically updatable, the @custom definition\nwill limit possible inputs.\"\"\"\ntype BloodSpecimenUpdate @auth(add: {rule:\"{ $isApp: { eq: \\\"true\\\" } }\"}, get: {or:[{rule:\"{ $isApp: { eq: \\\"true\\\" } }\"},{and:[{rule:\"{ $isAuthenticated: { eq: \\\"true\\\" } }\"},{rule:\"query( $orgID: ID! ) {\\n\\t\\t\\t\\tqueryBloodSpecimenUpdate {\\n\\t\\t\\t\\t\\torg ( filter: { id: [$orgID] } ) {\\n\\t\\t\\t\\t\\t\\tid\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\"}]}]}, query: {or:[{rule:\"{ $isApp: { eq: \\\"true\\\" } }\"},{and:[{rule:\"{ $isAuthenticated: { eq: \\\"true\\\" } }\"},{rule:\"query( $orgID: ID! ) {\\n\\t\\t\\t\\tqueryBloodSpecimenUpdate {\\n\\t\\t\\t\\t\\torg ( filter: { id: [$orgID] } ) {\\n\\t\\t\\t\\t\\t\\tid\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\"}]}]}, update: {rule:\"{ $isApp: { eq: \\\"true\\\" } }\"}, delete: {rule:\"{ $isApp: { eq: \\\"true\\\" } }\"}) {\n\tid: ID!\n\torg(filter: OrgFilter): Org!\n\tbloodSpecimen(filter: BloodSpecimenFilter): BloodSpecimen! @hasInverse(field: updates)\n\tbloodType: BloodType @search(by: [exact,regexp])\n\tcontainer: ContainerType @search(by: [exact,regexp])\n\tvolume: Float @search\n\tdescription: String @search(by: [fulltext])\n\ttimestamp: DateTime! @search\n}\n\n\"\"\"SpecimenType is the option for populating the Specimen `type` field.\n\nThis field allows for easier querying.\"\"\"\nenum SpecimenType {\n\tBLOOD\n}\n\n\"\"\"ContainerType is the option for populating the Specimen `container` field.\"\"\"\nenum ContainerType {\n\tVIAL\n}\n\n\"\"\"SpecimenStatus is the option for populating the Specimen `status` field.\"\"\"\nenum SpecimenStatus {\n\tDESTROYED\n\tEXHAUSTED\n\tIN_INVENTORY\n\tIN_TRANSIT\n\tLOST\n\tRESERVED\n\tTRANSFERRED\n}\n\n\"\"\"BloodType is the option for populating the BloodSpecimen `bloodType` field.\"\"\"\nenum BloodType {\n\tO_NEG\n\tO_POS\n\tA_NEG\n\tA_POS\n\tB_NEG\n\tB_POS\n\tAB_NEG\n\tAB_POS\n}\n\n#######################\n# Extended Definitions\n#######################\n\nscalar DateTime\n\nenum DgraphIndex {\n\tint\n\tfloat\n\tbool\n\thash\n\texact\n\tterm\n\tfulltext\n\ttrigram\n\tregexp\n\tyear\n\tmonth\n\tday\n\thour\n}\n\ninput AuthRule {\n\tand: [AuthRule]\n\tor: [AuthRule]\n\tnot: AuthRule\n\trule: String\n}\n\nenum HTTPMethod {\n\tGET\n\tPOST\n\tPUT\n\tPATCH\n\tDELETE\n}\n\nenum Mode {\n\tBATCH\n\tSINGLE\n}\n\ninput CustomHTTP {\n\turl: String!\n\tmethod: HTTPMethod!\n\tbody: String\n\tgraphql: String\n\tmode: Mode\n\tforwardHeaders: [String!]\n\tsecretHeaders: [String!]\n\tintrospectionHeaders: [String!]\n\tskipIntrospection: Boolean\n}\n\ndirective @hasInverse(field: String!) on FIELD_DEFINITION\ndirective @search(by: [DgraphIndex!]) on FIELD_DEFINITION\ndirective @dgraph(type: String, pred: String) on OBJECT | INTERFACE | FIELD_DEFINITION\ndirective @id on FIELD_DEFINITION\ndirective @withSubscription on OBJECT | INTERFACE\ndirective @secret(field: String!, pred: String) on OBJECT | INTERFACE\ndirective @auth(\n\tquery: AuthRule,\n\tadd: AuthRule,\n\tupdate: AuthRule,\n\tdelete:AuthRule) on OBJECT\ndirective @custom(http: CustomHTTP) on FIELD_DEFINITION\ndirective @remote on OBJECT | INTERFACE\ndirective @cascade on FIELD\n\ninput IntFilter {\n\teq: Int\n\tle: Int\n\tlt: Int\n\tge: Int\n\tgt: Int\n}\n\ninput FloatFilter {\n\teq: Float\n\tle: Float\n\tlt: Float\n\tge: Float\n\tgt: Float\n}\n\ninput DateTimeFilter {\n\teq: DateTime\n\tle: DateTime\n\tlt: DateTime\n\tge: DateTime\n\tgt: DateTime\n}\n\ninput StringTermFilter {\n\tallofterms: String\n\tanyofterms: String\n}\n\ninput StringRegExpFilter {\n\tregexp: String\n}\n\ninput StringFullTextFilter {\n\talloftext: String\n\tanyoftext: String\n}\n\ninput StringExactFilter {\n\teq: String\n\tle: String\n\tlt: String\n\tge: String\n\tgt: String\n}\n\ninput StringHashFilter {\n\teq: String\n}\n\n#######################\n# Generated Types\n#######################\n\ntype AddBloodSpecimenPayload {\n\tbloodSpecimen(filter: BloodSpecimenFilter, order: BloodSpecimenOrder, first: Int, offset: Int): [BloodSpecimen]\n\tnumUids: Int\n}\n\ntype AddBloodSpecimenUpdatePayload {\n\tbloodSpecimenUpdate(filter: BloodSpecimenUpdateFilter, order: BloodSpecimenUpdateOrder, first: Int, offset: Int): [BloodSpecimenUpdate]\n\tnumUids: Int\n}\n\ntype AddConsentPayload {\n\tconsent(filter: ConsentFilter, order: ConsentOrder, first: Int, offset: Int): [Consent]\n\tnumUids: Int\n}\n\ntype AddDonorConsentActionPayload {\n\tdonorConsentAction(filter: DonorConsentActionFilter, order: DonorConsentActionOrder, first: Int, offset: Int): [DonorConsentAction]\n\tnumUids: Int\n}\n\ntype AddDonorPayload {\n\tdonor(filter: DonorFilter, order: DonorOrder, first: Int, offset: Int): [Donor]\n\tnumUids: Int\n}\n\ntype AddOrgPayload {\n\torg(filter: OrgFilter, order: OrgOrder, first: Int, offset: Int): [Org]\n\tnumUids: Int\n}\n\ntype AddUserPayload {\n\tuser(filter: UserFilter, order: UserOrder, first: Int, offset: Int): [User]\n\tnumUids: Int\n}\n\ntype DeleteBloodSpecimenPayload {\n\tbloodSpecimen(filter: BloodSpecimenFilter, order: BloodSpecimenOrder, first: Int, offset: Int): [BloodSpecimen]\n\tmsg: String\n\tnumUids: Int\n}\n\ntype DeleteBloodSpecimenUpdatePayload {\n\tbloodSpecimenUpdate(filter: BloodSpecimenUpdateFilter, order: BloodSpecimenUpdateOrder, first: Int, offset: Int): [BloodSpecimenUpdate]\n\tmsg: String\n\tnumUids: Int\n}\n\ntype DeleteConsentPayload {\n\tconsent(filter: ConsentFilter, order: ConsentOrder, first: Int, offset: Int): [Consent]\n\tmsg: String\n\tnumUids: Int\n}\n\ntype DeleteDonorConsentActionPayload {\n\tdonorConsentAction(filter: DonorConsentActionFilter, order: DonorConsentActionOrder, first: Int, offset: Int): [DonorConsentAction]\n\tmsg: String\n\tnumUids: Int\n}\n\ntype DeleteDonorPayload {\n\tdonor(filter: DonorFilter, order: DonorOrder, first: Int, offset: Int): [Donor]\n\tmsg: String\n\tnumUids: Int\n}\n\ntype DeleteOrgPayload {\n\torg(filter: OrgFilter, order: OrgOrder, first: Int, offset: Int): [Org]\n\tmsg: String\n\tnumUids: Int\n}\n\ntype DeleteSpecimenPayload {\n\tspecimen(filter: SpecimenFilter, order: SpecimenOrder, first: Int, offset: Int): [Specimen]\n\tmsg: String\n\tnumUids: Int\n}\n\ntype DeleteUserPayload {\n\tuser(filter: UserFilter, order: UserOrder, first: Int, offset: Int): [User]\n\tmsg: String\n\tnumUids: Int\n}\n\ntype UpdateBloodSpecimenPayload {\n\tbloodSpecimen(filter: BloodSpecimenFilter, order: BloodSpecimenOrder, first: Int, offset: Int): [BloodSpecimen]\n\tnumUids: Int\n}\n\ntype UpdateBloodSpecimenUpdatePayload {\n\tbloodSpecimenUpdate(filter: BloodSpecimenUpdateFilter, order: BloodSpecimenUpdateOrder, first: Int, offset: Int): [BloodSpecimenUpdate]\n\tnumUids: Int\n}\n\ntype UpdateConsentPayload {\n\tconsent(filter: ConsentFilter, order: ConsentOrder, first: Int, offset: Int): [Consent]\n\tnumUids: Int\n}\n\ntype UpdateDonorConsentActionPayload {\n\tdonorConsentAction(filter: DonorConsentActionFilter, order: DonorConsentActionOrder, first: Int, offset: Int): [DonorConsentAction]\n\tnumUids: Int\n}\n\ntype UpdateDonorPayload {\n\tdonor(filter: DonorFilter, order: DonorOrder, first: Int, offset: Int): [Donor]\n\tnumUids: Int\n}\n\ntype UpdateOrgPayload {\n\torg(filter: OrgFilter, order: OrgOrder, first: Int, offset: Int): [Org]\n\tnumUids: Int\n}\n\ntype UpdateSpecimenPayload {\n\tspecimen(filter: SpecimenFilter, order: SpecimenOrder, first: Int, offset: Int): [Specimen]\n\tnumUids: Int\n}\n\ntype UpdateUserPayload {\n\tuser(filter: UserFilter, order: UserOrder, first: Int, offset: Int): [User]\n\tnumUids: Int\n}\n\n#######################\n# Generated Enums\n#######################\n\nenum BloodSpecimenOrderable {\n\texternalID\n\ttimestamp\n\tvolume\n\tdescription\n}\n\nenum BloodSpecimenUpdateOrderable {\n\tvolume\n\tdescription\n\ttimestamp\n}\n\nenum ConsentOrderable {\n\ttextBody\n\tdestructionDate\n}\n\nenum DonorConsentActionOrderable {\n\ttimestamp\n}\n\nenum DonorOrderable {\n\tdob\n}\n\nenum OrgOrderable {\n\tname\n}\n\nenum SpecimenOrderable {\n\texternalID\n\ttimestamp\n}\n\nenum UserOrderable {\n\temail\n\tfirstName\n\tlastName\n\tauth0ID\n}\n\n#######################\n# Generated Inputs\n#######################\n\ninput AddBloodSpecimenInput {\n\torg: OrgRef!\n\texternalID: String!\n\ttype: SpecimenType\n\tstatus: SpecimenStatus\n\tdonor: DonorRef!\n\tconsent: ConsentRef!\n\ttimestamp: DateTime!\n\tbloodType: BloodType!\n\tcontainer: ContainerType!\n\tvolume: Float!\n\tdescription: String!\n\tupdates: [BloodSpecimenUpdateRef]\n}\n\ninput AddBloodSpecimenUpdateInput {\n\torg: OrgRef!\n\tbloodSpecimen: BloodSpecimenRef!\n\tbloodType: BloodType\n\tcontainer: ContainerType\n\tvolume: Float\n\tdescription: String\n\ttimestamp: DateTime!\n}\n\ninput AddConsentInput {\n\torg: OrgRef!\n\tdonorConsent: [DonorConsentActionRef]\n\ttextBody: String!\n\tspecimens: [SpecimenRef]\n\tdestructionDate: DateTime!\n}\n\ninput AddDonorConsentActionInput {\n\torg: OrgRef!\n\tdonor: DonorRef!\n\tconsent: ConsentRef!\n\ttimestamp: DateTime!\n}\n\ninput AddDonorInput {\n\torg: OrgRef!\n\tdob: DateTime!\n\tsex: Sex\n\trace: Race\n\tdonorConsent: [DonorConsentActionRef]\n\tspecimens: [SpecimenRef]\n}\n\ninput AddOrgInput {\n\tname: String!\n\tusers: [UserRef]\n}\n\ninput AddUserInput {\n\temail: String!\n\torg: OrgRef!\n\tfirstName: String!\n\tlastName: String!\n\tauth0ID: String!\n}\n\ninput BloodSpecimenFilter {\n\tid: [ID!]\n\texternalID: StringHashFilter\n\ttype: SpecimenType_exact_StringRegExpFilter\n\tstatus: SpecimenStatus_exact_StringRegExpFilter\n\ttimestamp: DateTimeFilter\n\tbloodType: BloodType_exact_StringRegExpFilter\n\tcontainer: ContainerType_exact_StringRegExpFilter\n\tvolume: FloatFilter\n\tdescription: StringFullTextFilter\n\tand: BloodSpecimenFilter\n\tor: BloodSpecimenFilter\n\tnot: BloodSpecimenFilter\n}\n\ninput BloodSpecimenOrder {\n\tasc: BloodSpecimenOrderable\n\tdesc: BloodSpecimenOrderable\n\tthen: BloodSpecimenOrder\n}\n\ninput BloodSpecimenPatch {\n\torg: OrgRef\n\texternalID: String\n\ttype: SpecimenType\n\tstatus: SpecimenStatus\n\tdonor: DonorRef\n\tconsent: ConsentRef\n\ttimestamp: DateTime\n\tbloodType: BloodType\n\tcontainer: ContainerType\n\tvolume: Float\n\tdescription: String\n\tupdates: [BloodSpecimenUpdateRef]\n}\n\ninput BloodSpecimenRef {\n\tid: ID\n\torg: OrgRef\n\texternalID: String\n\ttype: SpecimenType\n\tstatus: SpecimenStatus\n\tdonor: DonorRef\n\tconsent: ConsentRef\n\ttimestamp: DateTime\n\tbloodType: BloodType\n\tcontainer: ContainerType\n\tvolume: Float\n\tdescription: String\n\tupdates: [BloodSpecimenUpdateRef]\n}\n\ninput BloodSpecimenUpdateFilter {\n\tid: [ID!]\n\tbloodType: BloodType_exact_StringRegExpFilter\n\tcontainer: ContainerType_exact_StringRegExpFilter\n\tvolume: FloatFilter\n\tdescription: StringFullTextFilter\n\ttimestamp: DateTimeFilter\n\tand: BloodSpecimenUpdateFilter\n\tor: BloodSpecimenUpdateFilter\n\tnot: BloodSpecimenUpdateFilter\n}\n\ninput BloodSpecimenUpdateOrder {\n\tasc: BloodSpecimenUpdateOrderable\n\tdesc: BloodSpecimenUpdateOrderable\n\tthen: BloodSpecimenUpdateOrder\n}\n\ninput BloodSpecimenUpdatePatch {\n\torg: OrgRef\n\tbloodSpecimen: BloodSpecimenRef\n\tbloodType: BloodType\n\tcontainer: ContainerType\n\tvolume: Float\n\tdescription: String\n\ttimestamp: DateTime\n}\n\ninput BloodSpecimenUpdateRef {\n\tid: ID\n\torg: OrgRef\n\tbloodSpecimen: BloodSpecimenRef\n\tbloodType: BloodType\n\tcontainer: ContainerType\n\tvolume: Float\n\tdescription: String\n\ttimestamp: DateTime\n}\n\ninput BloodType_exact {\n\teq: BloodType\n\tle: BloodType\n\tlt: BloodType\n\tge: BloodType\n\tgt: BloodType\n}\n\ninput BloodType_exact_StringRegExpFilter {\n\teq: BloodType\n\tle: BloodType\n\tlt: BloodType\n\tge: BloodType\n\tgt: BloodType\n\tregexp: String\n}\n\ninput ConsentFilter {\n\tid: [ID!]\n\ttextBody: StringFullTextFilter\n\tdestructionDate: DateTimeFilter\n\tand: ConsentFilter\n\tor: ConsentFilter\n\tnot: ConsentFilter\n}\n\ninput ConsentOrder {\n\tasc: ConsentOrderable\n\tdesc: ConsentOrderable\n\tthen: ConsentOrder\n}\n\ninput ConsentPatch {\n\torg: OrgRef\n\tdonorConsent: [DonorConsentActionRef]\n\ttextBody: String\n\tspecimens: [SpecimenRef]\n\tdestructionDate: DateTime\n}\n\ninput ConsentRef {\n\tid: ID\n\torg: OrgRef\n\tdonorConsent: [DonorConsentActionRef]\n\ttextBody: String\n\tspecimens: [SpecimenRef]\n\tdestructionDate: DateTime\n}\n\ninput ContainerType_exact {\n\teq: ContainerType\n\tle: ContainerType\n\tlt: ContainerType\n\tge: ContainerType\n\tgt: ContainerType\n}\n\ninput ContainerType_exact_StringRegExpFilter {\n\teq: ContainerType\n\tle: ContainerType\n\tlt: ContainerType\n\tge: ContainerType\n\tgt: ContainerType\n\tregexp: String\n}\n\ninput DonorConsentActionFilter {\n\tid: [ID!]\n\ttimestamp: DateTimeFilter\n\tand: DonorConsentActionFilter\n\tor: DonorConsentActionFilter\n\tnot: DonorConsentActionFilter\n}\n\ninput DonorConsentActionOrder {\n\tasc: DonorConsentActionOrderable\n\tdesc: DonorConsentActionOrderable\n\tthen: DonorConsentActionOrder\n}\n\ninput DonorConsentActionPatch {\n\torg: OrgRef\n\tdonor: DonorRef\n\tconsent: ConsentRef\n\ttimestamp: DateTime\n}\n\ninput DonorConsentActionRef {\n\tid: ID\n\torg: OrgRef\n\tdonor: DonorRef\n\tconsent: ConsentRef\n\ttimestamp: DateTime\n}\n\ninput DonorFilter {\n\tid: [ID!]\n\tdob: DateTimeFilter\n\tsex: Sex_exact_StringRegExpFilter\n\trace: Race_exact_StringRegExpFilter\n\tand: DonorFilter\n\tor: DonorFilter\n\tnot: DonorFilter\n}\n\ninput DonorOrder {\n\tasc: DonorOrderable\n\tdesc: DonorOrderable\n\tthen: DonorOrder\n}\n\ninput DonorPatch {\n\torg: OrgRef\n\tdob: DateTime\n\tsex: Sex\n\trace: Race\n\tdonorConsent: [DonorConsentActionRef]\n\tspecimens: [SpecimenRef]\n}\n\ninput DonorRef {\n\tid: ID\n\torg: OrgRef\n\tdob: DateTime\n\tsex: Sex\n\trace: Race\n\tdonorConsent: [DonorConsentActionRef]\n\tspecimens: [SpecimenRef]\n}\n\ninput OrgFilter {\n\tid: [ID!]\n\tnot: OrgFilter\n}\n\ninput OrgOrder {\n\tasc: OrgOrderable\n\tdesc: OrgOrderable\n\tthen: OrgOrder\n}\n\ninput OrgPatch {\n\tname: String\n\tusers: [UserRef]\n}\n\ninput OrgRef {\n\tid: ID\n\tname: String\n\tusers: [UserRef]\n}\n\ninput Race_exact {\n\teq: Race\n\tle: Race\n\tlt: Race\n\tge: Race\n\tgt: Race\n}\n\ninput Race_exact_StringRegExpFilter {\n\teq: Race\n\tle: Race\n\tlt: Race\n\tge: Race\n\tgt: Race\n\tregexp: String\n}\n\ninput Sex_exact {\n\teq: Sex\n\tle: Sex\n\tlt: Sex\n\tge: Sex\n\tgt: Sex\n}\n\ninput Sex_exact_StringRegExpFilter {\n\teq: Sex\n\tle: Sex\n\tlt: Sex\n\tge: Sex\n\tgt: Sex\n\tregexp: String\n}\n\ninput SpecimenFilter {\n\tid: [ID!]\n\texternalID: StringHashFilter\n\ttype: SpecimenType_exact_StringRegExpFilter\n\tstatus: SpecimenStatus_exact_StringRegExpFilter\n\ttimestamp: DateTimeFilter\n\tand: SpecimenFilter\n\tor: SpecimenFilter\n\tnot: SpecimenFilter\n}\n\ninput SpecimenOrder {\n\tasc: SpecimenOrderable\n\tdesc: SpecimenOrderable\n\tthen: SpecimenOrder\n}\n\ninput SpecimenPatch {\n\torg: OrgRef\n\texternalID: String\n\ttype: SpecimenType\n\tstatus: SpecimenStatus\n\tdonor: DonorRef\n\tconsent: ConsentRef\n\ttimestamp: DateTime\n}\n\ninput SpecimenRef {\n\tid: ID!\n}\n\ninput SpecimenStatus_exact {\n\teq: SpecimenStatus\n\tle: SpecimenStatus\n\tlt: SpecimenStatus\n\tge: SpecimenStatus\n\tgt: SpecimenStatus\n}\n\ninput SpecimenStatus_exact_StringRegExpFilter {\n\teq: SpecimenStatus\n\tle: SpecimenStatus\n\tlt: SpecimenStatus\n\tge: SpecimenStatus\n\tgt: SpecimenStatus\n\tregexp: String\n}\n\ninput SpecimenType_exact {\n\teq: SpecimenType\n\tle: SpecimenType\n\tlt: SpecimenType\n\tge: SpecimenType\n\tgt: SpecimenType\n}\n\ninput SpecimenType_exact_StringRegExpFilter {\n\teq: SpecimenType\n\tle: SpecimenType\n\tlt: SpecimenType\n\tge: SpecimenType\n\tgt: SpecimenType\n\tregexp: String\n}\n\ninput UpdateBloodSpecimenInput {\n\tfilter: BloodSpecimenFilter!\n\tset: BloodSpecimenPatch\n\tremove: BloodSpecimenPatch\n}\n\ninput UpdateBloodSpecimenUpdateInput {\n\tfilter: BloodSpecimenUpdateFilter!\n\tset: BloodSpecimenUpdatePatch\n\tremove: BloodSpecimenUpdatePatch\n}\n\ninput UpdateConsentInput {\n\tfilter: ConsentFilter!\n\tset: ConsentPatch\n\tremove: ConsentPatch\n}\n\ninput UpdateDonorConsentActionInput {\n\tfilter: DonorConsentActionFilter!\n\tset: DonorConsentActionPatch\n\tremove: DonorConsentActionPatch\n}\n\ninput UpdateDonorInput {\n\tfilter: DonorFilter!\n\tset: DonorPatch\n\tremove: DonorPatch\n}\n\ninput UpdateOrgInput {\n\tfilter: OrgFilter!\n\tset: OrgPatch\n\tremove: OrgPatch\n}\n\ninput UpdateSpecimenInput {\n\tfilter: SpecimenFilter!\n\tset: SpecimenPatch\n\tremove: SpecimenPatch\n}\n\ninput UpdateUserInput {\n\tfilter: UserFilter!\n\tset: UserPatch\n\tremove: UserPatch\n}\n\ninput UserFilter {\n\tid: [ID!]\n\tfirstName: StringExactFilter\n\tlastName: StringExactFilter\n\tauth0ID: StringExactFilter\n\tand: UserFilter\n\tor: UserFilter\n\tnot: UserFilter\n}\n\ninput UserOrder {\n\tasc: UserOrderable\n\tdesc: UserOrderable\n\tthen: UserOrder\n}\n\ninput UserPatch {\n\temail: String\n\torg: OrgRef\n\tfirstName: String\n\tlastName: String\n\tauth0ID: String\n}\n\ninput UserRef {\n\tid: ID\n\temail: String\n\torg: OrgRef\n\tfirstName: String\n\tlastName: String\n\tauth0ID: String\n}\n\n#######################\n# Generated Query\n#######################\n\ntype Query {\n\tgetOrg(id: ID!): Org\n\tqueryOrg(filter: OrgFilter, order: OrgOrder, first: Int, offset: Int): [Org]\n\tgetUser(id: ID!): User\n\tqueryUser(filter: UserFilter, order: UserOrder, first: Int, offset: Int): [User]\n\tgetDonor(id: ID!): Donor\n\tqueryDonor(filter: DonorFilter, order: DonorOrder, first: Int, offset: Int): [Donor]\n\tgetConsent(id: ID!): Consent\n\tqueryConsent(filter: ConsentFilter, order: ConsentOrder, first: Int, offset: Int): [Consent]\n\tgetDonorConsentAction(id: ID!): DonorConsentAction\n\tqueryDonorConsentAction(filter: DonorConsentActionFilter, order: DonorConsentActionOrder, first: Int, offset: Int): [DonorConsentAction]\n\tgetSpecimen(id: ID!): Specimen\n\tquerySpecimen(filter: SpecimenFilter, order: SpecimenOrder, first: Int, offset: Int): [Specimen]\n\tgetBloodSpecimen(id: ID!): BloodSpecimen\n\tqueryBloodSpecimen(filter: BloodSpecimenFilter, order: BloodSpecimenOrder, first: Int, offset: Int): [BloodSpecimen]\n\tgetBloodSpecimenUpdate(id: ID!): BloodSpecimenUpdate\n\tqueryBloodSpecimenUpdate(filter: BloodSpecimenUpdateFilter, order: BloodSpecimenUpdateOrder, first: Int, offset: Int): [BloodSpecimenUpdate]\n}\n\n#######################\n# Generated Mutations\n#######################\n\ntype Mutation {\n\tcustomAddUser(orgID: String!, email: String!, password: String!, firstName: String!, lastName: String!): User @custom(http: {url:\"http://localhost:4080/users\",method:\"POST\",body:\"{ orgID: $orgID, email: $email, password: $password, firstName: $firstName, lastName: $lastName }\",forwardHeaders:[\"folivora-custom-secret\",\"X-Auth0-Token\"]})\n\tcustomUpdateUser(authZeroID: String!, password: String): User @custom(http: {url:\"http://localhost:4080/users\",method:\"PATCH\",body:\"{ authZeroID: $authZeroID, password: $password }\",forwardHeaders:[\"folivora-custom-secret\",\"X-Auth0-Token\"]})\n\tcustomDeleteUser(authZeroID: String!): User @custom(http: {url:\"http://localhost:4080/users\",method:\"DELETE\",body:\"{ authZeroID: $authZeroID }\",forwardHeaders:[\"folivora-custom-secret\",\"X-Auth0-Token\"]})\n\tcustomAddBloodSpecimenUpdate(orgID: String!, bloodSpecimenID: String!, bloodType: String, container: String, volume: Float, description: String): BloodSpecimenUpdate @custom(http: {url:\"http://localhost:4080/bloodspecimenupdate\",method:\"POST\",body:\"{ orgID: $orgID, bloodSpecimenID: $bloodSpecimenID, bloodType: $bloodType, container: $container, volume: $volume, description: $description }\",forwardHeaders:[\"folivora-custom-secret\",\"X-Auth0-Token\"]})\n\taddOrg(input: [AddOrgInput!]!): AddOrgPayload\n\tupdateOrg(input: UpdateOrgInput!): UpdateOrgPayload\n\tdeleteOrg(filter: OrgFilter!): DeleteOrgPayload\n\taddUser(input: [AddUserInput!]!): AddUserPayload\n\tupdateUser(input: UpdateUserInput!): UpdateUserPayload\n\tdeleteUser(filter: UserFilter!): DeleteUserPayload\n\taddDonor(input: [AddDonorInput!]!): AddDonorPayload\n\tupdateDonor(input: UpdateDonorInput!): UpdateDonorPayload\n\tdeleteDonor(filter: DonorFilter!): DeleteDonorPayload\n\taddConsent(input: [AddConsentInput!]!): AddConsentPayload\n\tupdateConsent(input: UpdateConsentInput!): UpdateConsentPayload\n\tdeleteConsent(filter: ConsentFilter!): DeleteConsentPayload\n\taddDonorConsentAction(input: [AddDonorConsentActionInput!]!): AddDonorConsentActionPayload\n\tupdateDonorConsentAction(input: UpdateDonorConsentActionInput!): UpdateDonorConsentActionPayload\n\tdeleteDonorConsentAction(filter: DonorConsentActionFilter!): DeleteDonorConsentActionPayload\n\tupdateSpecimen(input: UpdateSpecimenInput!): UpdateSpecimenPayload\n\tdeleteSpecimen(filter: SpecimenFilter!): DeleteSpecimenPayload\n\taddBloodSpecimen(input: [AddBloodSpecimenInput!]!): AddBloodSpecimenPayload\n\tupdateBloodSpecimen(input: UpdateBloodSpecimenInput!): UpdateBloodSpecimenPayload\n\tdeleteBloodSpecimen(filter: BloodSpecimenFilter!): DeleteBloodSpecimenPayload\n\taddBloodSpecimenUpdate(input: [AddBloodSpecimenUpdateInput!]!): AddBloodSpecimenUpdatePayload\n\tupdateBloodSpecimenUpdate(input: UpdateBloodSpecimenUpdateInput!): UpdateBloodSpecimenUpdatePayload\n\tdeleteBloodSpecimenUpdate(filter: BloodSpecimenUpdateFilter!): DeleteBloodSpecimenUpdatePayload\n}\n\n"
        }
    },
    "extensions": {
        "tracing": {
            "version": 1,
            "startTime": "2020-12-12T20:41:36.85473411Z",
            "endTime": "2020-12-12T20:41:36.855449198Z",
            "duration": 715088,
            "execution": {
                "resolvers": [
                    {
                        "path": [
                            "getGQLSchema"
                        ],
                        "parentType": "Query",
                        "fieldName": "getGQLSchema",
                        "returnType": "GQLSchema",
                        "startOffset": 75816,
                        "duration": 510784,
                        "dgraph": [
                            {
                                "label": "query",
                                "startOffset": 77333,
                                "duration": 145897
                            }
                        ]
                    }
                ]
            }
        }
    }
}